[project]
name = "arcade"
description = "Arcade Game Development Library"
readme = "README.rst"
authors = [
    {name="Paul Vincent Craven", email="paul@cravenfamily.com"}
]
license = {file = "license.rst"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    "pyglet>=2.0.7,<2.1",
    "pillow~=9.4.0",
    "pymunk~=6.4.0",
    "pytiled-parser~=2.2.0"
]
dynamic = ["version"]

[project.urls]
Homepage = "https://api.arcade.academy"
Documentation = "https://api.arcade.academy/"
Examples = "https://api.arcade.academy/en/latest/examples/index.html"
Issues = "https://github.com/pythonarcade/arcade/issues"
Source = "https://github.com/pythonarcade/arcade"
Book = "https://learn.arcade.academy"

[project.optional-dependencies]
dev = [
    "pytest",
    "mypy",
    "ruff",
    "coverage",
    "coveralls",
    "pytest-mock",
    "pytest-cov",
    "pygments==2.14.0",
    "docutils==0.19",
    "furo",
    "pyright",
    "pyyaml==6.0",
    "sphinx==6.2.1",
    "sphinx-autobuild==2021.3.14",
    "sphinx-copybutton==0.5.1",
    # Intentionally kept at 2.3 until this bugfix is published: https://github.com/jdillard/sphinx-sitemap/pull/62
    "sphinx-sitemap==2.3.0",
    "typer[all]==0.7.0",
    "wheel",
]

[project.scripts]
arcade = "arcade.management:execute_from_command_line"

[project.entry-points.pyinstaller40]
hook-dirs = "arcade.__pyinstaller:get_hook_dirs"

[tool.setuptools.packages.find]
include = ["arcade", "arcade.*"]

[tool.setuptools.dynamic]
version = {attr = "arcade.version.VERSION"}

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.ruff]
# --- Description of what we ignore ---
#
# E731 do not assign a lambda expression, use a def
# E741 Ambiguous variable name
# F811: redefinition
ignore = ["F811", "E731", "E741"]
show-source = true
line-length = 120
exclude = ["venv", ".venv*", "tests", "build", "doc", "util", ".mypy_cache", ".pytest_cache", "temp", "bugs"]
select = [
    "E",
    "F",
    # Whitespace linting must be re-enabled manually for ruff
    # see https://beta.ruff.rs/docs/configuration/#using-pyprojecttoml
    "W"
]


[tool.mypy]
disable_error_code = "annotation-unchecked"

[tool.pytest.ini_options]
norecursedirs = ["doc", "holding", "arcade/examples", "build", ".venv", "env", "dist", "tempt"]

[tool.pyright]
include = ["arcade"]
exclude = ["venv", "arcade/examples", "arcade/experimental", "tests", "doc"]
# Use type info from pytiled_parser and pyglet, which do not ship `py.typed` file
useLibraryCodeForTypes = true
reportMissingTypeStubs = "none"

[tool.coverage.run]
source = ["arcade"]
omit = ["./arcade/examples/*", "./arcade/gui/examples/*", "./arcade/experimental/*", "./env/*", "./tests/*", "./doc/*", "./Win*/*"]

[[tool.mypy.overrides]]
module = "pyglet.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "PIL.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pymunk"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytiled_parser.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "PyInstaller.*"
ignore_missing_imports = true
